*ucompleteme.txt* better code completion for vim	*ucompleteme*


CONTENTS						*ucompleteme-contents*

 1. Introduction            |ucompleteme-intro|
 2. Usage	            |ucompleteme-details|
 3. Installation            |ucompleteme-install|


INTRODUCTION						*ucompleteme-intro*

|ucompleteme| is a Vim plugin for insert-mode completion.  It combines the
results of omni-completion with its own "proximity" completion function.

|ucompleteme| attempts to provide completion options intelligently, so the user
doesn't have to think about what kind of code completion to use (|compl-omni|,
|compl-current|, etc.) Plugins like SuperTab provide a means to easily switch
between different completion methods, but they aren't as opinionated about
building the list of matches for the user.

The philosophy behind |ucompleteme| is that instead of having to think about
which completion type is best, the completion funciton should make an educated
guess by first running the omni-completion function (where available), then
finding matches within the current buffer, then other buffers of the same
filetype, and finally the remaining buffers.


DETAILS							*ucompleteme-details*

|ucompleteme| provides a |compl-function|.  By default it re-maps `<tab>` in
insert mode to use this function.  If an |omnifuc| is defined, |ucompletme|
starts by populating the list with those results first and giving the user a
chance to interact.  After that it will run its own "proximity" completion
function that searches each line of a buffer progressively further from the
cursor.  The proximity search is run on the current buffer, and then the other
buffers of the same |filetype|, and finally the remaining open buffers.


INSTALLATION						*ucompleteme-install*

Put the "ucompleteme.vim" file in your |runtimepath|, and add the following to
your |vimrc|:

	call ucompleteme#Setup()
